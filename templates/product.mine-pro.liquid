{% layout 'theme.mine' %}

{% include 'bold-product' with product, hide_action: 'break' %}{% if bold_hidden_product %}{% break %}{%endif %}

{% include 'breadcrumb', homepage: 'mine-professional' %}
<div class="row">
  {% include 'mine-pro-collection-sidebar' %}
  <div class="col-xs-9 col-main">
    <div itemscope itemtype="http://schema.org/Product" class="product">
      <meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
      <meta itemprop="image" content="{{ product.featured_image.src | product_img_url: 'grande' }}">

      <div class="row">
        <div class="col-xs-12 col-sm-5 product-img-box {% if settings.product_image_border%} grid-item-border {% endif %}">
          {% if product.images.size == 0 %}
          <div class="product-photo-container">
            <img src="{{ '' | product_img_url: 'grande' }}" alt="">
          </div>
          {% else %}
          <div class="product-photo-container">
            {% assign featured_image = bold_selected_or_first_available_variant.featured_image | default: product.featured_image %}
            <a href="{{ featured_image | img_url: 'original' }}" >
              <img id="product-featured-image" src="{{ featured_image | img_url: 'grande' }}" alt="{{ featured_image.alt | escape }}" data-zoom-image="{{ featured_image.src | img_url: 'original' }}"/>
            </a>
          </div>
          {% if product.images.size > 0 %}		
          <div class="more-view-wrapper{% if product.images.size == 1 %} hidden{% endif %} {% if settings.style_moreview == 'vertical' %}more-view-wrapper-jcarousel{% else %} more-view-wrapper-owlslider {% endif %}">
            <ul id="more-view-carousel" class="product-photo-thumbs{% if settings.style_moreview == 'vertical' %} jcarousel-skin-tango{% else %} owl-carousel{% endif %}">
              {% for image in product.images %}
              <li class="grid-item">
                <a href="javascript:void(0)" data-image="{{ image.src | product_img_url: 'grande' }}" data-zoom-image="{{ image.src | product_img_url: 'original' }}">
                  <img src="{{ image.src | product_img_url: 'compact' }}" alt="{{ image.alt | escape }}">
                </a>
              </li>
              {% endfor %}
            </ul>
          </div>
          {% endif %}
          {% endif %}
        </div>

        <div class="col-xs-12 col-sm-7 product-shop">
          <header class="product-title {% if collection.previous_product or collection.next_product and settings.display_prev_next_product and collection %}has-btn{% endif %}">
            <h2 itemprop="name">{{ product.title }}</h2>
            {% if settings.display_prev_next_product and collection %}
              {% if collection.previous_product %}
              <a class="prev btn" href="{{ collection.previous_product }}" title="Prev">Previous Product</a>
              {% endif %}
              {% if collection.next_product %}
              <a class="next btn" href="{{ collection.next_product }}" title="Next">Next Product</a>
              {% endif %}
            {% endif %}
          </header>

          {% if settings.display_sample_vendor %}
          <p class="sample-vendor"><span>{{ product.vendor }}</span></p>
          {% endif %}

          {% if settings.display_product_reviews %}       
          <span class="shopify-product-reviews-badge" data-id="{{ product.id }}"></span>
          {% endif %}

          {% if product.description contains '[countdown]' %}            
          {% assign count_down_first = product.description | split:'[/countdown]' | first %}
          {% assign count_down_final = count_down_first | split:'[countdown]' | last %}
          <div class="countdown"><span>{{ settings.text_countdown }}</span><div id="clock"></div></div>
          <script>
            $(document ).ready(function() {
              $("#clock").countdown('{{ count_down_final }}', function(event) {
                $(this).html(event.strftime('%Dd %H:%M:%S'));
              });
            })
          </script>
          {% endif %}

          {% if settings.display_availability or settings.display_product_type or settings.display_vendor %}
          <div class="product-infor">
            {% if settings.display_availability %}
            <p class="product-inventory"> <label>Availability</label><span>{% if bold_selected_or_first_available_variant.inventory_management %}{% assign first_inventory = bold_selected_or_first_available_variant.inventory_quantity %}{% if first_inventory > 0 %}{{first_inventory}} in stock{% else %}Out of stock{% endif %}{% else %}Many in stock{% endif %}
              </span></p>
            {% endif %}
            {% if settings.display_product_type %}
            <p class="product-type"> <label>Product Type</label><span>{{ product.type }}</span></p>
            {% endif %}
            {% if settings.display_vendor %}
            <p class="product-vendor"> <label>Vendor</label><span>{{ product.vendor }}</span></p>
            {% endif %}
          </div>
          {% endif %}
          
          <div itemprop="offers" itemscope itemtype="http://schema.org/Offer">            
            <meta itemprop="priceCurrency" content="{{ shop.currency }}">
            <link itemprop="availability" href="http://schema.org/{% if product.available %}InStock{% else %}OutOfStock{% endif %}">
            
            {% if product.description contains '[countdown]' %}
            {% assign des = product.description | split:'[/countdown]' | last %}
              {% if settings.show_desc == 'short' %}
                <div class="short-description">{{ des | strip_html | truncatewords: 50 }}</div>
              {% elsif settings.show_desc == 'full' %}
            	<div class="short-description">{{ des }}</div>
              {% endif %}
            {% else %}
              {% if settings.show_desc == 'short' %}
            	<div class="short-description">{{ product.description | strip_html | truncatewords: 50 }}</div>
              {% elsif settings.show_desc == 'full' %}
            	<div class="short-description">{{ product.description }}</div>
              {% endif %}
            {% endif %}
                       
            <form action="/cart/add" class="shapp_qb_prod" method="post" enctype="multipart/form-data" id="add-to-cart-form">
              <div class="prices">
                {% if bold_compare_at_price > bold_price %}
                <span class="compare-price">{{ bold_compare_at_price_max | money }}</span>
                <span class="price on-sale" itemprop="price">{{ bold_price | money }}</span>
                {% else %}
                <span class="price" itemprop="price">{{ bold_price | money }}</span>
                {% endif %}
              </div>
              
              <div id="product-variants">
                {% assign variantCount = bold_variants_size %}
                {% if product.available %} 
                {% if variantCount > 1 %}	
                <select id="product-selectors" name="id" style="display:none">
                  {% for variant in product.variants %}
                  {% include 'bold-variant' with variant, hide_action: 'skip'  %}

                  <option {% if variant == bold_selected_or_first_available_variant %} selected="selected" {% endif %} value="{{ variant.id }}">{{ variant.title }} - {{ variant.price | money }}</option>
                  {% endfor %}
                </select>
                
                {% if settings.use_color_swatch %}
                {% for option in product.options %}
                {% include 'swatch' with option %}
                {% endfor %}
                {% endif %}
                {% else %}
                <input type="hidden" name="id" value="{{ bold_selected_or_first_available_variant.id }}" />
                {% endif %}
                {% endif %}
              </div>
              
              {% if product.available %} 
              
              {% include 'product-quantity' %}
              
              {% unless qb_loaded == 'true' %}
              <div class="shappify-qty-msg">{{bold_selected_or_first_available_variant.metafields.shappify_qb.pricing_html}}</div>
              {% assign qb_loaded = 'true' %}
              {% endunless %}
              <br>
              <br>

              <input type="submit" name="add" class="btn" id="product-add-to-cart" value="Add to Cart">          
              {% else %} 
              <input type="submit" name="add" class="btn" id="product-add-to-cart" disabled value="Unavailable">          
              {% endif %}
            </form>
            
            {% unless bundle_loaded == 'true' %}
  				{% include 'shappify-bdl-load-bundle' %}
  				{% assign bundle_loaded = 'true' %}
			{% endunless %}

            {% include 'wishlist-product' %}

            {% if settings.display_product_detail_tag %}         
            <div class="tags">
              <i class="icon-tags">Tags:</i> 
              {% for tag in product.tags %}
              <span class="separator">/</span>
              <a href="/collections/all/{{ tag | handle }}" rel="tag">{{ tag }}</a>
              {% endfor %}
            </div>
            {% endif %}

            {% if settings.display_product_detail_share %}
            {% comment %}
            {% include 'share' with product %}
            {% endcomment %}
            <div class="share_toolbox">
              <p>{{ settings.text_share }}</p>
              <ul>
                {% if settings.social_title_1 != blank %}
                <li><a href="{{ settings.social_link_1 }}?subject={{product.title}}&body={{canonical_url}}" title="{{ settings.social_title_1 }}">{{ 'social_icon_1.png' | asset_url | img_tag }}</a></li>
                {% endif %}
                {% if settings.social_title_2 != blank %}
                <li><a href="{{ settings.social_link_2 }}{{ canonical_url }}&p[images][0]={{featured_image}}" target="_blank" title="{{ settings.social_title_2 }}">{{ 'social_icon_2.png' | asset_url | img_tag }}</a></li>
                {% endif %}
                {% if settings.social_title_3 != blank %}
                <li><a href="{{ settings.social_link_3 }}{{ canonical_url }}" target="_blank" title="{{ settings.social_title_3 }}">{{ 'social_icon_3.png' | asset_url | img_tag }}</a></li>
                {% endif %}
                {% if settings.social_title_4 != blank %}
                <li><a href="{{ settings.social_link_4 }}{{ canonical_url }}&media=http:{{ featured_image | img_url: 'grande' }}&description={{product.title}}" target="_blank" title="{{ settings.social_title_4 }}">{{ 'social_icon_4.png' | asset_url | img_tag }}</a></li>
                {% endif %}
                {% if settings.social_title_5 != blank %}
                <li><a href="{{ settings.social_link_5 }}{{ canonical_url }}" target="_blank" title="{{ settings.social_title_5 }}">{{ 'social_icon_5.png' | asset_url | img_tag }}</a></li>
                {% endif %}
              </ul>
            </div>
            {% endif %}
            
            {% include 'product-accordions' %}
            
          </div>
        </div>
      </div>
    </div>
    
    {% include 'product-tabs' %}
    
    {% if settings.display_related_products %} 
    {% if settings.related_products_type == "tags" %}
    {% include 'related-products-by-tags' %}
    {% else %}
    {% include 'related-products' %}
    {% endif %}
    {% endif %}

    {{ 'option_selection.js' | shopify_asset_url | script_tag }}
    
  </div>
</div>

{% if settings.display_recently_viewed_products %} 
{% include 'recently-viewed-products' %}
{% endif %}

<script>
  //Shopify.Image.preload({{ product.images | json }}, 'grande');

  {% if settings.display_subtotal and product.available %} 
  //update price when changing quantity
  function updatePricing() {
    //try pattern one before pattern 2
    var regex = /([0-9]+[.|,][0-9]+[.|,][0-9]+)/g;
    var unitPriceTextMatch = jQuery('.product .price').text().match(regex);
    
    if (!unitPriceTextMatch) {
      regex = /([0-9]+[.|,][0-9]+)/g;
      unitPriceTextMatch = jQuery('.product .price').text().match(regex);      
    }
    
    if (unitPriceTextMatch) {
      var unitPriceText = unitPriceTextMatch[0];      
      var unitPrice = unitPriceText.replace(/[.|,]/g,'');
      var quantity = parseInt(jQuery('#quantity').val());
      var totalPrice = unitPrice * quantity;

      var totalPriceText = Shopify.formatMoney(totalPrice, window.money_format);
      
      totalPriceText = totalPriceText.match(regex)[0];

      var regInput = new RegExp(unitPriceText, "g");  
      var totalPriceHtml = jQuery('.product .price').html().replace(regInput ,totalPriceText); 

      jQuery('.product .total-price span').html(totalPriceHtml);      
    }
  }
  jQuery('#quantity').on('change', updatePricing);
  {% endif %}
  
var selectCallback = function(variant, selector) {

  var addToCart = jQuery('#product-add-to-cart'),
      productPrice = jQuery('.product .price'),
      comparePrice = jQuery('.product .compare-price');  
   
  if (variant) {
    if (variant.available) {
      // We have a valid product variant, so enable the submit button
      addToCart.removeClass('disabled').removeAttr('disabled').val('Add to Cart');

    } else {
      // Variant is sold out, disable the submit button
      addToCart.val('Sold Out').addClass('disabled').attr('disabled', 'disabled');
    }

    // Regardless of stock, update the product price
    productPrice.html(Shopify.formatMoney(variant.price, "{{ shop.money_format }}"));

    // Also update and show the product's compare price if necessary
    if ( variant.compare_at_price > variant.price ) {
      productPrice.addClass("on-sale")
      comparePrice
        .html(Shopify.formatMoney(variant.compare_at_price, "{{ shop.money_format }}"))
        .show();
    } else {
      comparePrice.hide();
      productPrice.removeClass("on-sale");
    }
    {% if settings.use_color_swatch %}
    // BEGIN SWATCHES
      var form = jQuery('#' + selector.domIdPrefix).closest('form');
      for (var i=0,length=variant.options.length; i<length; i++) {
        var radioButton = form.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] +'"]');
        if (radioButton.size()) {
          radioButton.get(0).checked = true;
        }
      }
     // END SWATCHES
     {% endif %}
  
  	{% if settings.display_subtotal and product.available %}  
     updatePricing();
  	 {% endif %}
  
    {% if settings.enable_multiple_currencies %}
    Currency.convertAll('{{ shop.currency }}', jQuery('#currencies').val(), 'span.money', 'money_format');
    {% endif %}
          
  } else {
    // The variant doesn't exist. Just a safeguard for errors, but disable the submit button anyway
    addToCart.val('Unavailable').addClass('disabled').attr('disabled', 'disabled');
  }

  //update variant inventory
  {% if settings.display_availability %}
  if (variant.available) {
    if (variant.inventory_management!=null) {
      jQuery(".product-inventory span").text(variant.inventory_quantity + " in stock");
    } else {
      jQuery(".product-inventory span").text("Many in stock");
    }
  } else {
    jQuery(".product-inventory span").text("Out of stock");
  }
  {% endif %}
  
    /*begin variant image*/
    if (variant && variant.featured_image) {
        var originalImage = jQuery("#product-featured-image");
        var newImage = variant.featured_image;
        var element = originalImage[0];
        Shopify.Image.switchImage(newImage, element, function (newImageSizedSrc, newImage, element) {
          jQuery('#more-view-carousel img').each(function() {
            var grandSize = jQuery(this).attr('src');
            grandSize = grandSize.replace('compact','grande');
            if (grandSize == newImageSizedSrc) {
              jQuery(this).parent().trigger('click');              
              return false;
            }
          });
        });        
    }
    /*end of variant image*/
};

jQuery(function($) {
  {% if product.available and bold_variants_size > 1 %}
    new Shopify.OptionSelectors('product-selectors', {
      product: {% include 'bold-product', output: 'json' %},
      onVariantSelected: selectCallback, 
	  enableHistoryState: true
    });   
     
     {% comment %}
     Use color swatch and linked options (copyright by @carolineschnapp)
     {% endcomment %}
     {% if settings.use_color_swatch and product.available and product.options.size > 1 %}
     Shopify.linkOptionSelectors({% include 'bold-product', output: 'json' %});
     {% endif %} 
     
     {% if settings.use_color_swatch != true %}
      jQuery('.single-option-selector').selectize();
      jQuery('.selectize-input input').attr("disabled","disabled");
     {% endif %}

   {% endif %}
  
  // Add label if only one product option and it isn't 'Title'. Could be 'Size'.
  {% if product.options.size == 1 and product.options.first != 'Title' %}
    $('.selector-wrapper:eq(0)').prepend('<label>{{ product.options.first }}</label>');
  {% endif %}

  // Hide selectors if we only have 1 variant and its title contains 'Default'.
  {% if bold_variants_size == 1 and product.variants.first.title contains 'Default' %}
    $('.selector-wrapper').hide();
  {% endif %}

  // Auto-select first available variant on page load. Otherwise the product looks sold out.
  {% assign found_one_in_stock = false %}
  {% for variant in product.variants %}
    {% include 'bold-variant' with variant, hide_action: 'skip'  %}

    {% if variant.available and found_one_in_stock == false %}
      {% assign found_one_in_stock = true %}
      {% for option in product.options %}
      $('.single-option-selector:eq({{ forloop.index0 }})').val({{ variant.options[forloop.index0] | json }}).trigger('change');
      {% endfor %}
    {% endif %}
  {% endfor %}
  
  {% if settings.display_product_reviews %}  
    var reviewsTimeout = setInterval(function() {
      if (jQuery(".spr-badge-caption").length>0) {
		jQuery(".spr-badge-caption").on('click', function() {
          jQuery('html,body').animate({
            scrollTop: jQuery(".panel:last").offset().top},
              '400');
          jQuery("#collapse-tab4").collapse('show');
        });
        clearInterval(reviewsTimeout);
      }
    },1000);
    
  {% endif %}
 
});
  
  
</script>
<script>
  jQuery(document).ready(function(){
  if (jQuery(".product-infor .product-inventory > span").html() == 'Many in stock'){
    jQuery(".product-infor").addClass("ManyStock");
  }
  });
</script>